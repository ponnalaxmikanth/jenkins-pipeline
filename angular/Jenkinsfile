pipeline {
    agent any 
    stages {
        stage('Download Code') {
            steps {
                echo 'Download Code from Git' 
                script {
                    // The below will clone your repo and will be checked out to master branch by default.
                    git credentialsId: 'jenkins-user-github', url: 'https://github.com/ponnalaxmikanth/home-tracker.git'
                    // Do a ls -lart to view all the files are cloned. It will be clonned. This is just for you to be sure about it.
                    // sh "ls -lart ./*" 
                    // List all branches in your repo. 
                    // sh "git branch -a"
                    // Checkout to a specific branch in your repo.
                    sh "git checkout development"
                }
            }
        }
        stage('Install dependencies') {
			steps {
                script {
                    if (fileExists('node_modules')) {
                        sh 'rm -rf node_modules'
                    }

                    if (fileExists('rm package-lock.json')) {
                        sh 'rm package-lock.json'
                    }
                }
                sh '''
                PATH=/sbin:/usr/sbin:/usr/bin:/usr/local/bin
                cd UI
                echo "PATH = ${PATH}"
                node --version
                npm --version
                npm cache clean --force
		npm install -g @angular/cli
                npm install --force
                echo "Install dependencies successfully!"
                '''
            }
        }

        stage('Bundle Angular application') {
			steps {
				sh '''
                echo "BUILD NUMBER = $BUILD_NUMBER"
                ./node_modules/.bin/ng build --aot --prod
                echo ""
                '''
            }
        }
        // stage('Security Check') {
        //     steps {
        //         echo 'Run the security check against the application' 
        //     }
        // }
        stage('Run Unit Tests') {
            steps {
                echo 'Run unit tests from the source code' 
            }
        }
        stage('Run Integration Tests') {
            steps {
                echo 'Run only crucial integration tests from the source code' 
            }
        }
        stage('Publish Artifacts') {
            steps {
                echo 'Save the assemblies generated from the compilation' 
            }
        }
    }
}
